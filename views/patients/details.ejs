<%- include('../layouts/header', { title: 'Détails de la patiente', active: 'patients' }) %>

<div class="patient-details-page">    <div class="page-header">
        <div class="header-actions">
            <a href="/patients" class="btn-secondary">
                <img src="/images/arrow_back.svg" alt="Retour" class="icon-small">
                Retour à la liste
            </a>
        </div>
        <div class="header-actions-right">
            <a href="/patients/<%= patient.id %>/edit" class="btn-secondary">
                <img src="/images/Edit.svg" alt="Éditer" class="icon-small">
                Modifier
            </a>
            <button class="btn-danger delete-patient" data-id="<%= patient.id %>">
                <img src="/images/Trash.svg" alt="Supprimer" class="icon-small">
                Supprimer
            </button>
        </div>
    </div>

    <div class="patient-details-content">
        <div class="patient-header">
            <h1><%= patient.prenom %> <%= patient.nom %></h1>
            <span class="patient-since">Cliente depuis le <%= new Date(patient.date_inscription).toLocaleDateString('fr-FR') %></span>
        </div>        <div class="patient-info-grid">
            <div class="info-card personal-info">
                <h3>Informations personnelles</h3>
                <div class="info-list">
                    <div class="info-item">
                        <span class="info-label">Email</span>
                        <span class="info-value"><%= patient.email %></span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Téléphone</span>
                        <span class="info-value"><%= patient.telephone %></span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Date d'inscription</span>
                        <span class="info-value"><%= new Date(patient.date_inscription).toLocaleDateString('fr-FR') %></span>
                    </div>
                </div>
            </div>            <div class="info-card professional-info">
                <h3>Profil professionnel</h3>
                <div class="info-list">
                    <div class="info-item">
                        <span class="info-label">Emploi actuel</span>
                        <span class="info-value"><%= patient.emploi_actuel || 'Non renseigné' %></span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Emploi visé</span>
                        <span class="info-value"><%= patient.emploi_vise || 'Non renseigné' %></span>
                    </div>
                    <div class="info-item full-width">
                        <span class="info-label">Compétences</span>
                        <span class="info-value">
                            <% if (patient.competences) { %>
                                <div class="skills-list">
                                    <% patient.competences.split(',').forEach(skill => { %>
                                        <span class="skill-tag"><%= skill.trim() %></span>
                                    <% }); %>
                                </div>
                            <% } else { %>
                                Non renseignées
                            <% } %>
                        </span>
                    </div>
                    <div class="info-item full-width">
                        <span class="info-label">Expérience</span>
                        <span class="info-value">
                            <%= patient.experience || 'Non renseignée' %>
                        </span>
                    </div>
                </div>
            </div>            <div class="info-card notes-section">
                <h3>Notes personnelles</h3>
                <div class="notes-content">
                    <% if (patient.notes) { %>
                        <p><%= patient.notes %></p>
                    <% } else { %>
                        <p>Aucune note disponible.</p>
                    <% } %>
                </div>
            </div>

            <div class="info-card modules-section">
                <div class="section-header">
                    <h3>Modules</h3>
                </div>
                <div class="modules-list">
                    <% allModules.forEach(m => { %>
                        <div class="module-progress-item">
                            <div class="module-info">
                                <h4><%= m.titre %></h4>
                            </div>
                            <div class="patient-toggle">
                                <label class="switch">
                                    <input type="checkbox" class="assign-toggle" data-module-id="<%= m.id %>" <%= assignedModules.map(a => a.module_id).includes(m.id) ? 'checked' : '' %> />
                                    <span class="slider round"></span>
                                </label>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div> <!-- Fin de modules-section -->

        </div> <!-- fin patient-info-grid -->
    </div>
</div>

<div class="form-actions-bottom" style="text-align:center;margin:20px 0;">
    <a href="/patients" class="btn-secondary">
        <img src="/images/arrow_back.svg" alt="Retour" class="icon-small">
        Retour à la liste
    </a>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Gestionnaire pour le bouton de suppression de patiente
        const deleteButton = document.querySelector('.delete-patient');
        const popup = document.getElementById('validation-popup');
        const popupTitle = document.getElementById('popup-title');
        const popupMessage = document.getElementById('popup-message');
        const popupCancel = document.getElementById('popup-cancel');
        const popupConfirm = document.getElementById('popup-confirm');
        
        deleteButton.addEventListener('click', function() {
            const patientId = this.getAttribute('data-id');
            
            popupTitle.textContent = 'Confirmation de suppression';
            popupMessage.textContent = 'Êtes-vous sûr de vouloir supprimer cette patiente ? Cette action est irréversible.';
            
            popup.style.display = 'flex';
            
            popupCancel.onclick = function() {
                popup.style.display = 'none';
            };
            
            popupConfirm.onclick = function() {
                // Ici, ajoutez le code pour supprimer réellement la patiente
                // par exemple, avec un appel fetch à votre API
                console.log('Suppression de la patiente ' + patientId);
                window.location.href = '/patients';
            };
        });
        
        // Gestion des toggles d'assignation de module
        const assignToggles = document.querySelectorAll('.assign-toggle');
        
        assignToggles.forEach(toggle => {
            toggle.addEventListener('change', function() {
                const moduleId = this.getAttribute('data-module-id');
                const isChecked = this.checked;
                
                // Récupérer l'ID du patient depuis l'URL
                const patientId = '<%= patient.id %>';
                
                // Faire une requête pour assigner ou désassigner le module
                fetch(`/patients/${patientId}/${isChecked ? 'assign-module' : 'unassign-module'}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({ module_id: moduleId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(`Module ${isChecked ? 'assigné' : 'désassigné'} avec succès!`);
                        // Recharger la page pour mettre à jour l'état des modules
                        window.location.reload();
                    } else {
                        alert(data.message || 'Une erreur est survenue lors de l\'assignation du module');
                    }
                })
                .catch(error => {
                    console.error('Erreur:', error);
                    alert('Une erreur est survenue lors de l\'assignation du module');
                });
            });
        });
    });
</script>

<%- include('../layouts/footer') %>